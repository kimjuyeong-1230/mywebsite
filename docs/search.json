[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "testwebsite",
    "section": "",
    "text": "안녕하세요 데이터분석입니다\n\n\n\n \n  \n   \n  \n    \n     Github"
  },
  {
    "objectID": "index.html#홈페이지-첫-화면입니다",
    "href": "index.html#홈페이지-첫-화면입니다",
    "title": "testwebsite",
    "section": "",
    "text": "안녕하세요 데이터분석입니다"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n2"
  },
  {
    "objectID": "hw.html",
    "href": "hw.html",
    "title": "hw1",
    "section": "",
    "text": "84pg. 다음 표의 내용을 데이터 프레임으로 만들어 출력해 보세요.\n\nimport pandas as pd\ndf = pd.DataFrame({\n  '제품' : ['사과', '딸기', '수박'],\n                  '가격' : [1800, 1500, 3000],\n                  '판매량' : [24, 38, 13]\n                  })\ndf\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13\n\n\n\n\n\n\n\n\n# 가격 평균\nsum(df['가격'])/3\n\n2100.0\n\n\n\n# 판매량 평균\nsum(df['판매량'])/3\n\n25.0\n\n\n\n\n115pg. 데이터를 이용해 분석 문제를 해결해 보세요.\n\n# mpg 데이터 복사본 만들기\nmpg = pd.read_csv(\"C:/Users/USER/Documents/LS빅데이터스쿨/Doit_Python/Data/mpg.csv\")\nmpg_copy = mpg.copy()\nmpg_copy\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns\n\n\n\n\n# 복사본 데이터 이용해 cty는 city로, hwy는 highway로 수정\nmpg_copy = mpg_copy.rename(columns = {'cty' : 'city'})\nmpg_copy = mpg_copy.rename(columns = {'hwy' : 'highway'})\n#mpg_copy = mpg_copy.rename(columns={'cty': 'city', 'hwy': 'highway'}) 이렇게도 가능\n\n# 일부 출력하여 변수명 바뀌었는지 확인\nmpg_copy[:5]\nmpg_copy.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\n\n130pg. 미국 동북중부 437개 지역의 인구통계정보 데이터 활용\n\n# 데이터 불러오기\nmidwest = pd.read_csv(\"C:/Users/USER/Documents/LS빅데이터스쿨/Doit_Python/Data/midwest.csv\")\nmidwest\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n35.396784\n7.667090\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n16.549869\n3.138596\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n15.064584\n2.620907\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n24.995504\n5.659847\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n21.666382\n4.583725\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n\n\n\n\n437 rows × 28 columns\n\n\n\n\n# poptotal변수를 total로, popasian변수를 asian으로 수정\nmidwest = midwest.rename(columns={'poptotal': 'total', 'popasian': 'asian'})\nmidwest.columns\n\nIndex(['PID', 'county', 'state', 'area', 'total', 'popdensity', 'popwhite',\n       'popblack', 'popamerindian', 'asian', 'popother', 'percwhite',\n       'percblack', 'percamerindan', 'percasian', 'percother', 'popadults',\n       'perchsd', 'percollege', 'percprof', 'poppovertyknown',\n       'percpovertyknown', 'percbelowpoverty', 'percchildbelowpovert',\n       'percadultpoverty', 'percelderlypoverty', 'inmetro', 'category'],\n      dtype='object')\n\n\n\n# total, asian 변수를 이용해 '전체 인구 대비 아시아 인구 백분율' 파생변수를 추가하고, 히스토그램 만들기\nimport matplotlib.pyplot as plt\nmidwest['전체 인구 대비 아시아 인구 백분율'] = (midwest['asian'] / midwest['total']) * 100\nmidwest['전체 인구 대비 아시아 인구 백분율'].plot.hist()\nplt.show()\n\n\n\n\n\n\n\n\n\n# 아시아 인구 백분율 전체 평균을 구하고 평균을 초과하면 large, 그외에는 small 부여한 파생변수 만들기\nimport numpy as np\nasian_percentage = midwest['전체 인구 대비 아시아 인구 백분율'].mean()\nmidwest['group'] = np.where(midwest['전체 인구 대비 아시아 인구 백분율'] &gt; asian_percentage, 'large', 'small')\nmidwest\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n전체 인구 대비 아시아 인구 백분율\ngroup\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\nsmall\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\nsmall\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\nsmall\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\nsmall\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\nsmall\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n0.885746\nlarge\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n0.199549\nsmall\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n0.221821\nsmall\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n1.231471\nlarge\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n0.980912\nlarge\n\n\n\n\n437 rows × 30 columns\n\n\n\n\n# 빈도 구하기\ncount_test = midwest['group'].value_counts()\ncount_test\n\n# 빈도 막대 그래프\ncount_test.plot.bar(rot = 0)"
  },
  {
    "objectID": "hw.html#홈페이지-첫-화면입니다",
    "href": "hw.html#홈페이지-첫-화면입니다",
    "title": "hw1",
    "section": "",
    "text": "안녕하세요 데이터분석쥉입니다"
  },
  {
    "objectID": "hw2.html",
    "href": "hw2.html",
    "title": "hw2",
    "section": "",
    "text": "154pg. mpg 데이터 이용해 분석문제 해결\n\n1. displ이 4이하인 자동차와 5이상인 자동차 중 어떤 자동차의 hwy 평균이 더 높은지 알아보세요\n\nimport pandas as pd\nmpg = pd.read_csv(\"data/mpg.csv\")\nmpg\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns\n\n\n\n\nimport numpy as np\n# 1. displ(배기량)이 4이하인 자동차와 5이상인 자동차\ndispl_down = mpg.query(\"displ &lt;= 4\")\ndispl_up = mpg.query(\"displ &gt;= 5\")\ndown_mean = displ_down[\"hwy\"].mean()\nup_mean = displ_up[\"hwy\"].mean()\ndown_mean &gt; up_mean\n\nTrue\n\n\n\n\n2. 자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. ‘audi’와 ’toyota’ 중 어느 manugacturer의 cty 평균이 더 높은지 알아보세요\n\nman_audi = mpg.query(\"manufacturer == 'audi'\")\nman_toyota = mpg.query(\"manufacturer == 'toyota'\")\naudi_mean = man_audi[\"cty\"].mean()\ntoyota_mean = man_toyota[\"cty\"].mean()\naudi_mean &gt; toyota_mean\n\nFalse\n\n\n\n\n3. ‘chevrolet’, ‘ford’, ‘honda’ 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해보세요\n\nman_3 = mpg.query(\"manufacturer == 'chevrolet' or manufacturer == 'ford' or manufacturer == 'honda'\")\nman_3\nman_3[\"hwy\"].mean()\n\n22.50943396226415\n\n\n\n\n\n153pg. mpg 데이터를 이용해 분석문제 해결해보세요\n\n1. ’audi’에서 생산한 자동차 중에 어떤 자동차 모델의 hwy가 높은지 알아보려고 합니다. ’audi’에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.\n\nman_audi = mpg.query(\"manufacturer == 'audi'\")\nman_audi.sort_values(\"hwy\", ascending = False).head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n9\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact\n\n\n\n\n\n\n\n\n\n\n158pg\n\n1. mpg 데이터 복사본을 만들고, cty와 hwy를 더한 ’합산 연비 변수’를 추가하세요\n\nmpg_copy = mpg.copy()\nmpg_copy = mpg_copy.assign(total = mpg_copy[\"cty\"] + mpg_copy[\"hwy\"])\nmpg_copy\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n47\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n50\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n42\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n44\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n43\n\n\n\n\n234 rows × 12 columns\n\n\n\n\n\n2. 앞에서 만든 ’합한 연비 변수’를 2로 나눠 ’평균 연비 변수’를 추가하세요\n\nmpg_copy = mpg_copy.assign(mean = mpg_copy[\"total\"]/2)\nmpg_copy\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\nmean\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n23.5\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n25.0\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n25.5\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n25.5\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n21.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n47\n23.5\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n50\n25.0\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n42\n21.0\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n44\n22.0\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n43\n21.5\n\n\n\n\n234 rows × 13 columns\n\n\n\n\n\n3. ’평균 연비 변수’가 가장 높은 자동차 3종의 데이터를 출력하세요\n\nmpg_copy.sort_values(\"mean\", ascending = False).head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0\n\n\n\n\n\n\n\n\n\n4. 1~3문제를 해결할 수 있는 하나로 연결된 pandas 구문을 만들어 실행해보세요. 데이터는 복사본 대신 mpg원본을 이용하세요.\n\nmpg.assign(total = lambda x: x[\"cty\"] + x[\"hwy\"],\n           mean = lambda x: x[\"total\"]/2) \\\n           .sort_values(\"mean\", ascending = False) \\\n           .head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "posts/hw1/index.html",
    "href": "posts/hw1/index.html",
    "title": "hw1",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\n\n\n84pg. 다음 표의 내용을 데이터 프레임으로 만들어 출력해 보세요.\n\nimport pandas as pd\ndf = pd.DataFrame({\n  '제품' : ['사과', '딸기', '수박'],\n                  '가격' : [1800, 1500, 3000],\n                  '판매량' : [24, 38, 13]\n                  })\ndf\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13\n\n\n\n\n\n\n\n\n# 가격 평균\nsum(df['가격'])/3\n\n2100.0\n\n\n\n# 판매량 평균\nsum(df['판매량'])/3\n\n25.0\n\n\n\n\n115pg. 데이터를 이용해 분석 문제를 해결해 보세요.\n\n# mpg 데이터 복사본 만들기\nmpg = pd.read_csv(\"./data/mpg.csv\")\nmpg_copy = mpg.copy()\nmpg_copy\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns\n\n\n\n\n# 복사본 데이터 이용해 cty는 city로, hwy는 highway로 수정\nmpg_copy = mpg_copy.rename(columns = {'cty' : 'city'})\nmpg_copy = mpg_copy.rename(columns = {'hwy' : 'highway'})\n#mpg_copy = mpg_copy.rename(columns={'cty': 'city', 'hwy': 'highway'}) 이렇게도 가능\n\n# 일부 출력하여 변수명 바뀌었는지 확인\nmpg_copy[:5]\nmpg_copy.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\n\n130pg. 미국 동북중부 437개 지역의 인구통계정보 데이터 활용\n\n# 데이터 불러오기\nmidwest = pd.read_csv(\"data/midwest.csv\")\nmidwest\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n35.396784\n7.667090\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n16.549869\n3.138596\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n15.064584\n2.620907\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n24.995504\n5.659847\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n21.666382\n4.583725\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n\n\n\n\n437 rows × 28 columns\n\n\n\n\n# poptotal변수를 total로, popasian변수를 asian으로 수정\nmidwest = midwest.rename(columns={'poptotal': 'total', 'popasian': 'asian'})\nmidwest.columns\n\nIndex(['PID', 'county', 'state', 'area', 'total', 'popdensity', 'popwhite',\n       'popblack', 'popamerindian', 'asian', 'popother', 'percwhite',\n       'percblack', 'percamerindan', 'percasian', 'percother', 'popadults',\n       'perchsd', 'percollege', 'percprof', 'poppovertyknown',\n       'percpovertyknown', 'percbelowpoverty', 'percchildbelowpovert',\n       'percadultpoverty', 'percelderlypoverty', 'inmetro', 'category'],\n      dtype='object')\n\n\n\n# total, asian 변수를 이용해 '전체 인구 대비 아시아 인구 백분율' 파생변수를 추가하고, 히스토그램 만들기\nimport matplotlib.pyplot as plt\nmidwest['전체 인구 대비 아시아 인구 백분율'] = (midwest['asian'] / midwest['total']) * 100\nmidwest['전체 인구 대비 아시아 인구 백분율'].plot.hist()\nplt.show()\n\n\n\n\n\n\n\n\n\n# 아시아 인구 백분율 전체 평균을 구하고 평균을 초과하면 large, 그외에는 small 부여한 파생변수 만들기\nimport numpy as np\nasian_percentage = midwest['전체 인구 대비 아시아 인구 백분율'].mean()\nmidwest['group'] = np.where(midwest['전체 인구 대비 아시아 인구 백분율'] &gt; asian_percentage, 'large', 'small')\nmidwest\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n전체 인구 대비 아시아 인구 백분율\ngroup\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\nsmall\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\nsmall\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\nsmall\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\nsmall\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\nsmall\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n0.885746\nlarge\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n0.199549\nsmall\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n0.221821\nsmall\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n1.231471\nlarge\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n0.980912\nlarge\n\n\n\n\n437 rows × 30 columns\n\n\n\n\n# 빈도 구하기\ncount_test = midwest['group'].value_counts()\ncount_test\n\n# 빈도 막대 그래프\ncount_test.plot.bar(rot = 0)"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "blog",
    "section": "",
    "text": "hw1\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nJul 17, 2024\n\n\n김주영\n\n\n\n\n\n\n\n\n\n\n\n\nhw2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhw4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhw4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhw5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/hw2/hw2.html",
    "href": "posts/hw2/hw2.html",
    "title": "hw2",
    "section": "",
    "text": "154pg. mpg 데이터 이용해 분석문제 해결\n\n1. displ이 4이하인 자동차와 5이상인 자동차 중 어떤 자동차의 hwy 평균이 더 높은지 알아보세요\n\nimport pandas as pd\nmpg = pd.read_csv(\"./data/mpg.csv\")\nmpg\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns\n\n\n\n\nimport numpy as np\n# 1. displ(배기량)이 4이하인 자동차와 5이상인 자동차\ndispl_down = mpg.query(\"displ &lt;= 4\")\ndispl_up = mpg.query(\"displ &gt;= 5\")\ndown_mean = displ_down[\"hwy\"].mean()\nup_mean = displ_up[\"hwy\"].mean()\ndown_mean &gt; up_mean\n\nTrue\n\n\n\n\n2. 자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. ‘audi’와 ’toyota’ 중 어느 manugacturer의 cty 평균이 더 높은지 알아보세요\n\nman_audi = mpg.query(\"manufacturer == 'audi'\")\nman_toyota = mpg.query(\"manufacturer == 'toyota'\")\naudi_mean = man_audi[\"cty\"].mean()\ntoyota_mean = man_toyota[\"cty\"].mean()\naudi_mean &gt; toyota_mean\n\nFalse\n\n\n\n\n3. ‘chevrolet’, ‘ford’, ‘honda’ 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해보세요\n\nman_3 = mpg.query(\"manufacturer == 'chevrolet' or manufacturer == 'ford' or manufacturer == 'honda'\")\nman_3\nman_3[\"hwy\"].mean()\n\n22.50943396226415\n\n\n\n\n\n153pg. mpg 데이터를 이용해 분석문제 해결해보세요\n\n1. ’audi’에서 생산한 자동차 중에 어떤 자동차 모델의 hwy가 높은지 알아보려고 합니다. ’audi’에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.\n\nman_audi = mpg.query(\"manufacturer == 'audi'\")\nman_audi.sort_values(\"hwy\", ascending = False).head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n9\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact\n\n\n\n\n\n\n\n\n\n\n158pg\n\n1. mpg 데이터 복사본을 만들고, cty와 hwy를 더한 ’합산 연비 변수’를 추가하세요\n\nmpg_copy = mpg.copy()\nmpg_copy = mpg_copy.assign(total = mpg_copy[\"cty\"] + mpg_copy[\"hwy\"])\nmpg_copy\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n47\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n50\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n42\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n44\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n43\n\n\n\n\n234 rows × 12 columns\n\n\n\n\n\n2. 앞에서 만든 ’합한 연비 변수’를 2로 나눠 ’평균 연비 변수’를 추가하세요\n\nmpg_copy = mpg_copy.assign(mean = mpg_copy[\"total\"]/2)\nmpg_copy\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\nmean\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n23.5\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n25.0\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n25.5\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n25.5\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n21.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n47\n23.5\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n50\n25.0\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n42\n21.0\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n44\n22.0\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n43\n21.5\n\n\n\n\n234 rows × 13 columns\n\n\n\n\n\n3. ’평균 연비 변수’가 가장 높은 자동차 3종의 데이터를 출력하세요\n\nmpg_copy.sort_values(\"mean\", ascending = False).head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0\n\n\n\n\n\n\n\n\n\n4. 1~3문제를 해결할 수 있는 하나로 연결된 pandas 구문을 만들어 실행해보세요. 데이터는 복사본 대신 mpg원본을 이용하세요.\n\nmpg.assign(total = lambda x: x[\"cty\"] + x[\"hwy\"],\n           mean = lambda x: x[\"total\"]/2) \\\n           .sort_values(\"mean\", ascending = False) \\\n           .head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "posts/hw2/index.html",
    "href": "posts/hw2/index.html",
    "title": "hw2",
    "section": "",
    "text": "154pg. mpg 데이터 이용해 분석문제 해결\n\n1. displ이 4이하인 자동차와 5이상인 자동차 중 어떤 자동차의 hwy 평균이 더 높은지 알아보세요\n\nimport pandas as pd\nmpg = pd.read_csv(\"./data/mpg.csv\")\nmpg\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns\n\n\n\n\nimport numpy as np\n# 1. displ(배기량)이 4이하인 자동차와 5이상인 자동차\ndispl_down = mpg.query(\"displ &lt;= 4\")\ndispl_up = mpg.query(\"displ &gt;= 5\")\ndown_mean = displ_down[\"hwy\"].mean()\nup_mean = displ_up[\"hwy\"].mean()\ndown_mean &gt; up_mean\n\nTrue\n\n\n\n\n2. 자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. ‘audi’와 ’toyota’ 중 어느 manugacturer의 cty 평균이 더 높은지 알아보세요\n\nman_audi = mpg.query(\"manufacturer == 'audi'\")\nman_toyota = mpg.query(\"manufacturer == 'toyota'\")\naudi_mean = man_audi[\"cty\"].mean()\ntoyota_mean = man_toyota[\"cty\"].mean()\naudi_mean &gt; toyota_mean\n\nFalse\n\n\n\n\n3. ‘chevrolet’, ‘ford’, ‘honda’ 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해보세요\n\nman_3 = mpg.query(\"manufacturer == 'chevrolet' or manufacturer == 'ford' or manufacturer == 'honda'\")\nman_3\nman_3[\"hwy\"].mean()\n\n22.50943396226415\n\n\n\n\n\n153pg. mpg 데이터를 이용해 분석문제 해결해보세요\n\n1. ’audi’에서 생산한 자동차 중에 어떤 자동차 모델의 hwy가 높은지 알아보려고 합니다. ’audi’에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.\n\nman_audi = mpg.query(\"manufacturer == 'audi'\")\nman_audi.sort_values(\"hwy\", ascending = False).head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n9\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact\n\n\n\n\n\n\n\n\n\n\n158pg\n\n1. mpg 데이터 복사본을 만들고, cty와 hwy를 더한 ’합산 연비 변수’를 추가하세요\n\nmpg_copy = mpg.copy()\nmpg_copy = mpg_copy.assign(total = mpg_copy[\"cty\"] + mpg_copy[\"hwy\"])\nmpg_copy\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n47\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n50\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n42\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n44\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n43\n\n\n\n\n234 rows × 12 columns\n\n\n\n\n\n2. 앞에서 만든 ’합한 연비 변수’를 2로 나눠 ’평균 연비 변수’를 추가하세요\n\nmpg_copy = mpg_copy.assign(mean = mpg_copy[\"total\"]/2)\nmpg_copy\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\nmean\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n23.5\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n25.0\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n25.5\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n25.5\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n21.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n47\n23.5\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n50\n25.0\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n42\n21.0\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n44\n22.0\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n43\n21.5\n\n\n\n\n234 rows × 13 columns\n\n\n\n\n\n3. ’평균 연비 변수’가 가장 높은 자동차 3종의 데이터를 출력하세요\n\nmpg_copy.sort_values(\"mean\", ascending = False).head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0\n\n\n\n\n\n\n\n\n\n4. 1~3문제를 해결할 수 있는 하나로 연결된 pandas 구문을 만들어 실행해보세요. 데이터는 복사본 대신 mpg원본을 이용하세요.\n\nmpg.assign(total = lambda x: x[\"cty\"] + x[\"hwy\"],\n           mean = lambda x: x[\"total\"]/2) \\\n           .sort_values(\"mean\", ascending = False) \\\n           .head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "textbook8.html",
    "href": "textbook8.html",
    "title": "textbook8",
    "section": "",
    "text": "seaborn 패키지 불러오기\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\n\n\n\nmpg = pd.read_csv(\"C:/Users/USER/Documents/LS빅데이터스쿨/mywebsite/data/mpg.csv\")\nmpg.shape\n\n(234, 11)\n\n\n\n\n\n\nsns.scatterplot(data= mpg, x = \"displ\", y=\"hwy\", hue=\"drv\") \\\n              .set(xlim=[3,6], ylim=[10,30])\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n\n\n\nsns.countplot(data=mpg, x='drv')\nplt.show()\n\n\n\n\n\n\n\n\n\nplotly를 사용한 산점도\n\n\nimport plotly.express as px\n\nsns.countplot(data=mpg, x='drv')\npx.scatter(data_frame=mpg, x=\"displ\", y=\"hwy\", color=\"drv\")\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\nimport pandas as pd\nimport plotly.express as px\nmpg = pd.read_csv(\"C:/Users/USER/Documents/LS빅데이터스쿨/mywebsite/data/mpg.csv\")\npx.scatter(data_frame = mpg, x = 'cty', y='hwy', color='drv')"
  },
  {
    "objectID": "textbook8.html#빈도-막대-그래프-만들기",
    "href": "textbook8.html#빈도-막대-그래프-만들기",
    "title": "textbook8",
    "section": "",
    "text": "seaborn 패키지 불러오기\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\n\n\n\nmpg = pd.read_csv(\"C:/Users/USER/Documents/LS빅데이터스쿨/mywebsite/data/mpg.csv\")\nmpg.shape\n\n(234, 11)\n\n\n\n\n\n\nsns.scatterplot(data= mpg, x = \"displ\", y=\"hwy\", hue=\"drv\") \\\n              .set(xlim=[3,6], ylim=[10,30])\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n\n\n\nsns.countplot(data=mpg, x='drv')\nplt.show()\n\n\n\n\n\n\n\n\n\nplotly를 사용한 산점도\n\n\nimport plotly.express as px\n\nsns.countplot(data=mpg, x='drv')\npx.scatter(data_frame=mpg, x=\"displ\", y=\"hwy\", color=\"drv\")\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\nimport pandas as pd\nimport plotly.express as px\nmpg = pd.read_csv(\"C:/Users/USER/Documents/LS빅데이터스쿨/mywebsite/data/mpg.csv\")\npx.scatter(data_frame = mpg, x = 'cty', y='hwy', color='drv')"
  },
  {
    "objectID": "text8.html",
    "href": "text8.html",
    "title": "textbook8",
    "section": "",
    "text": "seaborn 패키지 불러오기\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport plotly.express as px\n\n\n\n\nmpg = pd.read_csv(\"data/mpg.csv\")\nmpg.shape\n\n(234, 11)\n\n\n\n\n\n\nsns.scatterplot(data= mpg, x = \"displ\", y=\"hwy\", hue=\"drv\") \\\n              .set(xlim=[3,6], ylim=[10,30])\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n\n\n\nsns.countplot(data=mpg, x='drv')\nplt.show()\n\n\n\n\n\n\n\n\n\nplotly를 사용한 산점도\n\n\nimport plotly.express as px\n\nsns.countplot(data=mpg, x='drv')\npx.scatter(data_frame=mpg, x=\"displ\", y=\"hwy\", color=\"drv\")\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\nimport plotly.express as px\n\npx.scatter(data_frame = mpg, x = 'cty', y = 'hwy', color= 'drv')\nplt.show()\n\n\n\n\n\nmpg = pd.read_csv(\"data/mpg.csv\")\n# 자동차 종류별 빈도 구하기\ndf = mpg.groupby('category', as_index = False) \\\n        .agg(n=('category', 'count'))\ndf\n\n\n\n\n\n\n\n\ncategory\nn\n\n\n\n\n0\n2seater\n5\n\n\n1\ncompact\n47\n\n\n2\nmidsize\n41\n\n\n3\nminivan\n11\n\n\n4\npickup\n33\n\n\n5\nsubcompact\n35\n\n\n6\nsuv\n62\n\n\n\n\n\n\n\n\nplt.clf()\n# 막대그래프\npx.bar(data_frame = df, x='category', y='n', color ='category').show()\n\n                                                \n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "text8.html#빈도-막대-그래프-만들기",
    "href": "text8.html#빈도-막대-그래프-만들기",
    "title": "textbook8",
    "section": "",
    "text": "seaborn 패키지 불러오기\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport plotly.express as px\n\n\n\n\nmpg = pd.read_csv(\"data/mpg.csv\")\nmpg.shape\n\n(234, 11)\n\n\n\n\n\n\nsns.scatterplot(data= mpg, x = \"displ\", y=\"hwy\", hue=\"drv\") \\\n              .set(xlim=[3,6], ylim=[10,30])\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n\n\n\nsns.countplot(data=mpg, x='drv')\nplt.show()\n\n\n\n\n\n\n\n\n\nplotly를 사용한 산점도\n\n\nimport plotly.express as px\n\nsns.countplot(data=mpg, x='drv')\npx.scatter(data_frame=mpg, x=\"displ\", y=\"hwy\", color=\"drv\")\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\nimport plotly.express as px\n\npx.scatter(data_frame = mpg, x = 'cty', y = 'hwy', color= 'drv')\nplt.show()\n\n\n\n\n\nmpg = pd.read_csv(\"data/mpg.csv\")\n# 자동차 종류별 빈도 구하기\ndf = mpg.groupby('category', as_index = False) \\\n        .agg(n=('category', 'count'))\ndf\n\n\n\n\n\n\n\n\ncategory\nn\n\n\n\n\n0\n2seater\n5\n\n\n1\ncompact\n47\n\n\n2\nmidsize\n41\n\n\n3\nminivan\n11\n\n\n4\npickup\n33\n\n\n5\nsubcompact\n35\n\n\n6\nsuv\n62\n\n\n\n\n\n\n\n\nplt.clf()\n# 막대그래프\npx.bar(data_frame = df, x='category', y='n', color ='category').show()\n\n                                                \n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "hw3.html",
    "href": "hw3.html",
    "title": "hw3”",
    "section": "",
    "text": "import seaborn as sns\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\nmpg = pd.read_csv(\"data/mpg.csv\")\nmpg\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns\n\n\n\n\n\n\n\n# 데이터 불러오기 \nmidwest = pd.read_csv(\"data/midwest.csv\")\nmidwest\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n35.396784\n7.667090\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n16.549869\n3.138596\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n15.064584\n2.620907\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n24.995504\n5.659847\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n21.666382\n4.583725\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n\n\n\n\n437 rows × 28 columns\n\n\n\n\n# 그래프 그리기\nsns.scatterplot(data= midwest, x='poptotal', y='popasian') \\\n  .set(xlim =[0,500000], ylim=[0,10000])\nplt.show()"
  },
  {
    "objectID": "hw3.html#pg",
    "href": "hw3.html#pg",
    "title": "hw3”",
    "section": "",
    "text": "import seaborn as sns\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\nmpg = pd.read_csv(\"data/mpg.csv\")\nmpg\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns\n\n\n\n\n\n\n\n# 데이터 불러오기 \nmidwest = pd.read_csv(\"data/midwest.csv\")\nmidwest\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n35.396784\n7.667090\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n16.549869\n3.138596\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n15.064584\n2.620907\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n24.995504\n5.659847\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n21.666382\n4.583725\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n\n\n\n\n437 rows × 28 columns\n\n\n\n\n# 그래프 그리기\nsns.scatterplot(data= midwest, x='poptotal', y='popasian') \\\n  .set(xlim =[0,500000], ylim=[0,10000])\nplt.show()"
  },
  {
    "objectID": "hw3.html#pg-1",
    "href": "hw3.html#pg-1",
    "title": "hw3”",
    "section": "211pg",
    "text": "211pg"
  },
  {
    "objectID": "hw3.html#번.-어떤-회사에서-생성한-suv-차종의-도시연비가-높은지-알아보려고-합니다.-suv-차종을-대상으로-sty-평균이-가장-높은-회사-다섯-곳ㅇ르-막대그래프로-표현해-보세요.-막대는-연비가-높은-순으로-정렬하세요.",
    "href": "hw3.html#번.-어떤-회사에서-생성한-suv-차종의-도시연비가-높은지-알아보려고-합니다.-suv-차종을-대상으로-sty-평균이-가장-높은-회사-다섯-곳ㅇ르-막대그래프로-표현해-보세요.-막대는-연비가-높은-순으로-정렬하세요.",
    "title": "hw3”",
    "section": "1번. 어떤 회사에서 생성한 ‘suv’ 차종의 도시연비가 높은지 알아보려고 합니다. ‘suv’ 차종을 대상으로 sty 평균이 가장 높은 회사 다섯 곳ㅇ르 막대그래프로 표현해 보세요. 막대는 연비가 높은 순으로 정렬하세요.",
    "text": "1번. 어떤 회사에서 생성한 ‘suv’ 차종의 도시연비가 높은지 알아보려고 합니다. ‘suv’ 차종을 대상으로 sty 평균이 가장 높은 회사 다섯 곳ㅇ르 막대그래프로 표현해 보세요. 막대는 연비가 높은 순으로 정렬하세요.\n\n# 데이터 불러오기\nmpg = pd.read_csv(\"data/mpg.csv\")\nmpg\n\ndf = mpg.query('category == \"suv\"') \\\n        .groupby('manufacturer', as_index=False) \\\n        .agg(mean_cty = ('cty', 'mean')) \\\n        .sort_values('mean_cty', ascending = False) \\\n        .head()\ndf\n\n# 막대그래프\nsns.barplot(data = df, x = 'manufacturer', y = 'mean_cty')\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "hw3.html#번.-자동차-중에-어떤-category가-많은지-알아보려고-합니다.-sns.barplot을-이용해-자동차-종류별-빈도를-표현한-막대그래프를-만들어보세요.-막대는-빈도가-높은-순으로-정렬하세요.",
    "href": "hw3.html#번.-자동차-중에-어떤-category가-많은지-알아보려고-합니다.-sns.barplot을-이용해-자동차-종류별-빈도를-표현한-막대그래프를-만들어보세요.-막대는-빈도가-높은-순으로-정렬하세요.",
    "title": "hw3”",
    "section": "2번. 자동차 중에 어떤 category가 많은지 알아보려고 합니다. sns.barplot()을 이용해 자동차 종류별 빈도를 표현한 막대그래프를 만들어보세요. 막대는 빈도가 높은 순으로 정렬하세요.",
    "text": "2번. 자동차 중에 어떤 category가 많은지 알아보려고 합니다. sns.barplot()을 이용해 자동차 종류별 빈도를 표현한 막대그래프를 만들어보세요. 막대는 빈도가 높은 순으로 정렬하세요.\n\ndf_mpg = mpg.groupby('category', as_index=False) \\\n        .agg(n = ('category', 'count')) \\\n        .sort_values('n', ascending = False)\ndf_mpg\n\n# 막대그래프\nsns.barplot(data = df_mpg, x = 'category', y = 'n')\nplt.show()"
  },
  {
    "objectID": "hw4_0725.html",
    "href": "hw4_0725.html",
    "title": "hw4",
    "section": "",
    "text": "import numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import norm\nimport pandas as pd\nimport math"
  },
  {
    "objectID": "hw4_0725.html#정규분포-pdf-값을-계산하는-자신만의-파이썬-함수를-정의하고-정규분포-mu3-sigma2의-pdf를-그릴것",
    "href": "hw4_0725.html#정규분포-pdf-값을-계산하는-자신만의-파이썬-함수를-정의하고-정규분포-mu3-sigma2의-pdf를-그릴것",
    "title": "hw4",
    "section": "1. 정규분포 pdf 값을 계산하는 자신만의 파이썬 함수를 정의하고, 정규분포 mu=3, sigma=2의 pdf를 그릴것",
    "text": "1. 정규분포 pdf 값을 계산하는 자신만의 파이썬 함수를 정의하고, 정규분포 mu=3, sigma=2의 pdf를 그릴것\n\ndef y(x, mean, sigma):\n  a = 1 / math.sqrt(2 * math.pi * sigma**2)\n  b = np.exp(-(x-mean)**2/ sigma**2)\n  pdf_values = a*b\n  plt.plot(x_values, pdf_values, color='red', linewidth=2)\n  plt.show()\n\nx_values = np.linspace(-10, 10, 100)\ny(x = x_values, mean=3, sigma=2)"
  },
  {
    "objectID": "hw4_0725.html#파이썬-scipy-패키지-사용해서-다음과-같은-확률을-구하시오",
    "href": "hw4_0725.html#파이썬-scipy-패키지-사용해서-다음과-같은-확률을-구하시오",
    "title": "hw4",
    "section": "2. 파이썬 scipy 패키지 사용해서 다음과 같은 확률을 구하시오",
    "text": "2. 파이썬 scipy 패키지 사용해서 다음과 같은 확률을 구하시오\n\nX ~ N(2, 3^2)\n\n\n1) P(X &lt; 3)\n\nnorm.cdf(3, loc=2, scale=3)\n\n0.6305586598182363\n\n\n\n\n2) P(2 &lt; X &lt; 5)\n\nnorm.cdf(5, loc=2, scale=3) - norm.cdf(2, loc=2, scale=3)\n\n0.3413447460685429\n\n\n\n\n3) P(X &lt; 3 or X &gt; 7)\n\nnorm.cdf(3, loc=2, scale=3) + (1 - norm.cdf(7, loc=2, scale=3))\n\n0.678349012091051"
  },
  {
    "objectID": "hw4_0725.html#ls빅데이터스쿨-학생들의-중간고사-점수는-평균30-분산4인-정규분포를-따른다.-상위-5에-해당하는-학생의-점수는",
    "href": "hw4_0725.html#ls빅데이터스쿨-학생들의-중간고사-점수는-평균30-분산4인-정규분포를-따른다.-상위-5에-해당하는-학생의-점수는",
    "title": "hw4",
    "section": "3. LS빅데이터스쿨 학생들의 중간고사 점수는 평균:30, 분산:4인 정규분포를 따른다. 상위 5%에 해당하는 학생의 점수는?",
    "text": "3. LS빅데이터스쿨 학생들의 중간고사 점수는 평균:30, 분산:4인 정규분포를 따른다. 상위 5%에 해당하는 학생의 점수는?\n\nx = norm.rvs(loc=30, scale=2, size=100)\nx.sort()\nx[-5:]\n\narray([33.70528332, 33.73981583, 33.93829644, 34.25720492, 34.59235227])"
  },
  {
    "objectID": "posts/hw3/hw4_0725.html",
    "href": "posts/hw3/hw4_0725.html",
    "title": "hw4",
    "section": "",
    "text": "import numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import norm\nimport pandas as pd\nimport math"
  },
  {
    "objectID": "posts/hw3/hw4_0725.html#정규분포-pdf-값을-계산하는-자신만의-파이썬-함수를-정의하고-정규분포-mu3-sigma2의-pdf를-그릴것",
    "href": "posts/hw3/hw4_0725.html#정규분포-pdf-값을-계산하는-자신만의-파이썬-함수를-정의하고-정규분포-mu3-sigma2의-pdf를-그릴것",
    "title": "hw4",
    "section": "1. 정규분포 pdf 값을 계산하는 자신만의 파이썬 함수를 정의하고, 정규분포 mu=3, sigma=2의 pdf를 그릴것",
    "text": "1. 정규분포 pdf 값을 계산하는 자신만의 파이썬 함수를 정의하고, 정규분포 mu=3, sigma=2의 pdf를 그릴것\n\ndef y(x, mean, sigma):\n  a = 1 / math.sqrt(2 * math.pi * sigma**2)\n  b = np.exp(-(x-mean)**2/ sigma**2)\n  pdf_values = a*b\n  plt.plot(x_values, pdf_values, color='red', linewidth=2)\n  plt.show()\n\nx_values = np.linspace(-10, 10, 100)\ny(x = x_values, mean=3, sigma=2)"
  },
  {
    "objectID": "posts/hw3/hw4_0725.html#파이썬-scipy-패키지-사용해서-다음과-같은-확률을-구하시오",
    "href": "posts/hw3/hw4_0725.html#파이썬-scipy-패키지-사용해서-다음과-같은-확률을-구하시오",
    "title": "hw4",
    "section": "2. 파이썬 scipy 패키지 사용해서 다음과 같은 확률을 구하시오",
    "text": "2. 파이썬 scipy 패키지 사용해서 다음과 같은 확률을 구하시오\n\nX ~ N(2, 3^2)\n\n\n1) P(X &lt; 3)\n\nnorm.cdf(3, loc=2, scale=3)\n\n0.6305586598182363\n\n\n\n\n2) P(2 &lt; X &lt; 5)\n\nnorm.cdf(5, loc=2, scale=3) - norm.cdf(2, loc=2, scale=3)\n\n0.3413447460685429\n\n\n\n\n3) P(X &lt; 3 or X &gt; 7)\n\nnorm.cdf(3, loc=2, scale=3) + (1 - norm.cdf(7, loc=2, scale=3))\n\n0.678349012091051"
  },
  {
    "objectID": "posts/hw3/hw4_0725.html#ls빅데이터스쿨-학생들의-중간고사-점수는-평균30-분산4인-정규분포를-따른다.-상위-5에-해당하는-학생의-점수는",
    "href": "posts/hw3/hw4_0725.html#ls빅데이터스쿨-학생들의-중간고사-점수는-평균30-분산4인-정규분포를-따른다.-상위-5에-해당하는-학생의-점수는",
    "title": "hw4",
    "section": "3. LS빅데이터스쿨 학생들의 중간고사 점수는 평균:30, 분산:4인 정규분포를 따른다. 상위 5%에 해당하는 학생의 점수는?",
    "text": "3. LS빅데이터스쿨 학생들의 중간고사 점수는 평균:30, 분산:4인 정규분포를 따른다. 상위 5%에 해당하는 학생의 점수는?\n\n#x = norm.rvs(loc=30, scale=2, size=100)\n#x.sort()\n#x[-5:]\n\nx = norm.ppf(0.95, loc=30, scale=2)\nx\n\n33.28970725390295"
  },
  {
    "objectID": "posts/hw4/hw4_0729.html",
    "href": "posts/hw4/hw4_0729.html",
    "title": "hw4",
    "section": "",
    "text": "균일분포 (3, 7)에서 20개의 표본을 뽑아서 분산을 2가지 방법으로 추정해보세요.\n\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import uniform\nfrom scipy.stats import norm\n\nx = uniform.rvs(loc=3, scale=7, size = 20*10000).reshape(-1,20)\nx.mean()\n\n6.50096241971596\n\n\n\n\n\ns_2 = x.var(axis = 1, ddof = 1)\ns_2\n\nsns.histplot(s_2)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\nk_2 =  x.var(axis = 1, ddof = 0)\nk_2\n\nsns.histplot(k_2)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n\n\n\nsns.histplot(s_2)\nplt.axvline(x.var(), color=\"green\", linestyle=\"--\", linewidth=2)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\nsns.histplot(k_2)\nplt.axvline(x.var(), color=\"green\", linestyle=\"--\", linewidth=2)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n\n\n\nn-1로 나누었을 때의 녹색막대(모분산 위치)가 더 그래프의 중심에 있기 때문이다."
  },
  {
    "objectID": "posts/hw4/hw4_0729.html#표본-분산-n-1-vs.-n",
    "href": "posts/hw4/hw4_0729.html#표본-분산-n-1-vs.-n",
    "title": "hw4",
    "section": "",
    "text": "균일분포 (3, 7)에서 20개의 표본을 뽑아서 분산을 2가지 방법으로 추정해보세요.\n\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import uniform\nfrom scipy.stats import norm\n\nx = uniform.rvs(loc=3, scale=7, size = 20*10000).reshape(-1,20)\nx.mean()\n\n6.50096241971596\n\n\n\n\n\ns_2 = x.var(axis = 1, ddof = 1)\ns_2\n\nsns.histplot(s_2)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\nk_2 =  x.var(axis = 1, ddof = 0)\nk_2\n\nsns.histplot(k_2)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n\n\n\nsns.histplot(s_2)\nplt.axvline(x.var(), color=\"green\", linestyle=\"--\", linewidth=2)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\nsns.histplot(k_2)\nplt.axvline(x.var(), color=\"green\", linestyle=\"--\", linewidth=2)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n\n\n\nn-1로 나누었을 때의 녹색막대(모분산 위치)가 더 그래프의 중심에 있기 때문이다."
  },
  {
    "objectID": "posts/hw3/hw3_0725.html",
    "href": "posts/hw3/hw3_0725.html",
    "title": "hw4",
    "section": "",
    "text": "import numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import norm\nimport pandas as pd\nimport math"
  },
  {
    "objectID": "posts/hw3/hw3_0725.html#정규분포-pdf-값을-계산하는-자신만의-파이썬-함수를-정의하고-정규분포-mu3-sigma2의-pdf를-그릴것",
    "href": "posts/hw3/hw3_0725.html#정규분포-pdf-값을-계산하는-자신만의-파이썬-함수를-정의하고-정규분포-mu3-sigma2의-pdf를-그릴것",
    "title": "hw4",
    "section": "1. 정규분포 pdf 값을 계산하는 자신만의 파이썬 함수를 정의하고, 정규분포 mu=3, sigma=2의 pdf를 그릴것",
    "text": "1. 정규분포 pdf 값을 계산하는 자신만의 파이썬 함수를 정의하고, 정규분포 mu=3, sigma=2의 pdf를 그릴것\n\ndef y(x, mean, sigma):\n  a = 1 / math.sqrt(2 * math.pi * sigma**2)\n  b = np.exp(-(x-mean)**2/ sigma**2)\n  pdf_values = a*b\n  plt.plot(x_values, pdf_values, color='red', linewidth=2)\n  plt.show()\n\nx_values = np.linspace(-10, 10, 100)\ny(x = x_values, mean=3, sigma=2)"
  },
  {
    "objectID": "posts/hw3/hw3_0725.html#파이썬-scipy-패키지-사용해서-다음과-같은-확률을-구하시오",
    "href": "posts/hw3/hw3_0725.html#파이썬-scipy-패키지-사용해서-다음과-같은-확률을-구하시오",
    "title": "hw4",
    "section": "2. 파이썬 scipy 패키지 사용해서 다음과 같은 확률을 구하시오",
    "text": "2. 파이썬 scipy 패키지 사용해서 다음과 같은 확률을 구하시오\n\nX ~ N(2, 3^2)\n\n\n1) P(X &lt; 3)\n\nnorm.cdf(3, loc=2, scale=3)\n\n0.6305586598182363\n\n\n\n\n2) P(2 &lt; X &lt; 5)\n\nnorm.cdf(5, loc=2, scale=3) - norm.cdf(2, loc=2, scale=3)\n\n0.3413447460685429\n\n\n\n\n3) P(X &lt; 3 or X &gt; 7)\n\nnorm.cdf(3, loc=2, scale=3) + (1 - norm.cdf(7, loc=2, scale=3))\n\n0.678349012091051"
  },
  {
    "objectID": "posts/hw3/hw3_0725.html#ls빅데이터스쿨-학생들의-중간고사-점수는-평균30-분산4인-정규분포를-따른다.-상위-5에-해당하는-학생의-점수는",
    "href": "posts/hw3/hw3_0725.html#ls빅데이터스쿨-학생들의-중간고사-점수는-평균30-분산4인-정규분포를-따른다.-상위-5에-해당하는-학생의-점수는",
    "title": "hw4",
    "section": "3. LS빅데이터스쿨 학생들의 중간고사 점수는 평균:30, 분산:4인 정규분포를 따른다. 상위 5%에 해당하는 학생의 점수는?",
    "text": "3. LS빅데이터스쿨 학생들의 중간고사 점수는 평균:30, 분산:4인 정규분포를 따른다. 상위 5%에 해당하는 학생의 점수는?\n\n#x = norm.rvs(loc=30, scale=2, size=100)\n#x.sort()\n#x[-5:]\n\nx = norm.ppf(0.95, loc=30, scale=2)\nx\n\n33.28970725390295"
  },
  {
    "objectID": "posts/hw5/hw5_0730.html",
    "href": "posts/hw5/hw5_0730.html",
    "title": "hw5",
    "section": "",
    "text": "import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pyreadstat\nraw_welfare = pd.read_spss(\"C:/Users/USER/Documents/LS빅데이터스쿨/lsbigdata-project1/data/koweps/Koweps_hpwc14_2019_beta2.sav\")\nraw_welfare \n\n\n\n\n\n\n\n\nh14_id\nh14_ind\nh14_sn\nh14_merkey\nh_new\nh14_cobf\np14_wsc\np14_wsl\np14_wgc\np14_wgl\n...\nwc14_64\nwc14_65\nwc14_5aq4\nwc14_5aq5\nwc14_5aq6\nh14_pers_income1\nh14_pers_income2\nh14_pers_income3\nh14_pers_income4\nh14_pers_income5\n\n\n\n\n0\n2.0\n1.0\n1.0\n20101.0\n0.0\nNaN\n0.291589\n0.291589\n1307.764781\n1307.764781\n...\nNaN\n\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n0.0\nNaN\n\n\n1\n3.0\n1.0\n1.0\n30101.0\n0.0\nNaN\n0.419753\n0.419753\n1882.570960\n1882.570960\n...\nNaN\n\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n0.0\nNaN\n\n\n2\n4.0\n1.0\n1.0\n40101.0\n0.0\nNaN\n0.265263\n0.265980\n1189.691668\n1192.908537\n...\nNaN\n\nNaN\nNaN\nNaN\nNaN\n1284.0\nNaN\n0.0\nNaN\n\n\n3\n6.0\n1.0\n1.0\n60101.0\n0.0\nNaN\n0.494906\n0.495941\n2219.630833\n2224.273816\n...\n1.0\n.\n2.0\n4.0\n4.0\n2304.0\nNaN\n1800.0\n0.0\nNaN\n\n\n4\n6.0\n1.0\n1.0\n60101.0\n0.0\nNaN\n1.017935\n1.017935\n4565.389177\n4565.389177\n...\n1.0\n.\n1.0\n5.0\n2.0\nNaN\nNaN\nNaN\n0.0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n14413\n9800.0\n7.0\n1.0\n98000701.0\n1.0\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\n\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n0.0\nNaN\n\n\n14414\n9800.0\n7.0\n1.0\n98000701.0\n1.0\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\n\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n0.0\nNaN\n\n\n14415\n9800.0\n7.0\n1.0\n98000701.0\n1.0\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\n\nNaN\nNaN\nNaN\nNaN\n208.0\nNaN\n0.0\nNaN\n\n\n14416\n9800.0\n7.0\n1.0\n98000701.0\n1.0\nNaN\nNaN\nNaN\nNaN\nNaN\n...\n5.0\n.\n4.0\n3.0\n3.0\nNaN\n1200.0\nNaN\n0.0\nNaN\n\n\n14417\n9800.0\n7.0\n1.0\n98000701.0\n1.0\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\n\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n0.0\nNaN\n\n\n\n\n14418 rows × 830 columns\nwelfare = raw_welfare.copy()\nwelfare.shape\n\n(14418, 830)\nwelfare = welfare.rename(\n  columns = {\n             'h14_g3' : 'sex',  #성별\n             'h14_g4' : 'birth',  # 태어난 연도 \n             'h14_g10' : 'marriage_type',  #혼인상태\n             'h14_g11' : 'religion',  # 종교\n             'p1402_8aq1' : 'income',  # 월급\n             'h14_eco9' : 'code_job',  # 직업코드\n             'h14_reg7' : 'code_region'  #지역코드\n})\n\nwelfare = welfare[['sex', 'birth', 'marriage_type', 'religion','income', 'code_job','code_region']]\nwelfare\n\n\n\n\n\n\n\n\nsex\nbirth\nmarriage_type\nreligion\nincome\ncode_job\ncode_region\n\n\n\n\n0\n2.0\n1945.0\n2.0\n1.0\nNaN\nNaN\n1.0\n\n\n1\n1.0\n1948.0\n2.0\n2.0\nNaN\nNaN\n1.0\n\n\n2\n1.0\n1942.0\n3.0\n1.0\n107.0\n762.0\n1.0\n\n\n3\n1.0\n1962.0\n1.0\n1.0\n192.0\n855.0\n1.0\n\n\n4\n2.0\n1963.0\n1.0\n1.0\nNaN\nNaN\n1.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n14413\n2.0\n1967.0\n1.0\n1.0\nNaN\nNaN\n5.0\n\n\n14414\n2.0\n1992.0\n5.0\n1.0\nNaN\nNaN\n5.0\n\n\n14415\n1.0\n1995.0\n5.0\n1.0\nNaN\n910.0\n5.0\n\n\n14416\n2.0\n1998.0\n5.0\n1.0\n200.0\n246.0\n5.0\n\n\n14417\n1.0\n2001.0\n0.0\n1.0\nNaN\nNaN\n5.0\n\n\n\n\n14418 rows × 7 columns\nwelfare[\"sex\"].dtypes\nwelfare[\"sex\"].value_counts()\nwelfare[\"sex\"].isna().sum()\n\nwelfare[\"sex\"] = np.where(welfare[\"sex\"] == 1, 'male', 'female')\nwelfare[\"sex\"].value_counts()\n\n\nwelfare[\"income\"].describe()\nwelfare[\"income\"].isna().sum()\n\nsex_income = welfare.dropna(subset = \"income\") \\\n       .groupby(\"sex\", as_index= False) \\\n       .agg(mean_income = (\"income\", \"mean\"))\nsex_income\n\nsns.barplot(data = sex_income, x = \"sex\", y=\"mean_income\", hue=\"sex\")\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/hw5/hw5_0730.html#표본분산-표본평균-표본크기",
    "href": "posts/hw5/hw5_0730.html#표본분산-표본평균-표본크기",
    "title": "hw5",
    "section": "표본분산, 표본평균, 표본크기",
    "text": "표본분산, 표본평균, 표본크기\n\nsex_income = welfare.dropna(subset = \"income\") \\\n       .groupby(\"sex\", as_index= False) \\\n       .agg(std_income = (\"income\", \"std\"),\n            mean_income = (\"income\", \"mean\"),\n            count_income = (\"income\", \"count\"))\nsex_income\n\n\n\n\n\n\n\n\nsex\nstd_income\nmean_income\ncount_income\n\n\n\n\n0\nfemale\n132.057402\n186.293096\n2245\n\n\n1\nmale\n217.862254\n349.037571\n2289"
  },
  {
    "objectID": "posts/hw5/hw5_0730.html#신뢰구간",
    "href": "posts/hw5/hw5_0730.html#신뢰구간",
    "title": "hw5",
    "section": "신뢰구간",
    "text": "신뢰구간\n\nfrom scipy.stats import norm\nz = norm.ppf(0.975)\nsex_income['ci_lower'] = sex_income[\"mean_income\"] - z * (sex_income[\"std_income\"] /  np.sqrt(sex_income['count_income']-1))\n\nsex_income['ci_upper'] = sex_income[\"mean_income\"] + z * (sex_income[\"std_income\"] /  np.sqrt(sex_income['count_income']-1))"
  },
  {
    "objectID": "posts/hw5/hw5_0730.html#시각화",
    "href": "posts/hw5/hw5_0730.html#시각화",
    "title": "hw5",
    "section": "시각화",
    "text": "시각화\n\nsns.barplot(data = sex_income, x = \"sex\", y=\"mean_income\", hue=\"sex\")\nplt.errorbar(x=sex_income['sex'], \n             y=sex_income['mean_income'], \n             yerr=[sex_income['mean_income'] - sex_income['ci_lower'],\n             sex_income['ci_upper'] - sex_income['mean_income']],\n             capsize=5, \n             color='black',\n             label='Income',\n             fmt=\"none\")\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\nimport pyreadstat\nprint(pyreadstat.__version__)\n\n1.2.7"
  }
]