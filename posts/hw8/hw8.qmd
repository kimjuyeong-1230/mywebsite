---
title: "hw8"
format: html
jupyter: python3
---

```{python}
import numpy as np 
import pandas as pd
from scipy.stats import chi2
import statsmodels.api as sm
from scipy.stats import norm
from sklearn.metrics import confusion_matrix
```

```{python}
#종속변수: 백혈병 세포 관측 불가 여부 (REMISS), 1이면 관측 안됨을 의미
#독립변수:
#골수의 세포성 (CELL)
#골수편의 백혈구 비율 (SMEAR)
#골수의 백혈병 세포 침투 비율 (INFIL)
#골수 백혈병 세포의 라벨링 인덱스 (LI)
#말초혈액의 백혈병 세포 수 (BLAST)
#치료 시작 전 최고 체온 (TEMP)
```


## 문제 1. 데이터를 로드하고, 로지스틱 회귀모델을 적합하고, 회귀 표를 작성하세요.
```{python}
# 데이터로드
data=  pd.read_table('C:/Users/USER/Documents/LS빅데이터스쿨/LSbigdata-project1/data/leukemia_remission.txt', delimiter='\t')
data 
```

```{python}
# 로지스틱 회귀 모델 적합
X = data[['CELL', 'SMEAR', 'INFIL', 'LI', 'BLAST', 'TEMP']]  # 독립 변수
y = data['REMISS']  # 종속 변수 

X = sm.add_constant(X)

model = sm.Logit(y, X)
result = model.fit()

# 회귀표 
print(result.summary())
```


##문제 2. 해당 모델은 통계적으로 유의한가요? 그 이유를 검정통계량를 사용해서 설명하시오.(유의기준 : 0.2)
```{python}
# 회귀표 
stat_vaule = -2*(-17.186 + 10.797)
1-chi2.cdf(stat_vaule, df = 6)
```
* 0.04669995098322843, p-value가 유의수준 0.2보다 작기 때문에 유의하다.


##문제 3. 통계적으로 유의한 변수는 몇개이며, 어느 변수 인가요?

* LI, TEMP, 2개


##문제 4. 다음 환자에 대한 오즈는 얼마인가요?
```{python}
#CELL (골수의 세포성): 65%
#SMEAR (골수편의 백혈구 비율): 45%
#INFIL (골수의 백혈병 세포 침투 비율): 55%
#LI (골수 백혈병 세포의 라벨링 인덱스): 1.2
#BLAST (말초혈액의 백혈병 세포 수): 1.1세포/μL
#TEMP (치료 시작 전 최고 체온): 0.9
```

```{python}
my_odds= np.exp(64.2581 + 30.8301*0.65 + 24.6863 * 0.45 -24.9745*0.55 + 4.3605*1.2 + -0.0115*1.1 -100.1734*0.9)
my_odds
```


##문제 5. 위 환자의 혈액에서 백혈병 세포가 관측되지 않은 확률은 얼마인가요?
```{python}
probability = my_odds / (1 + my_odds)
probability
```

##문제 6. TEMP 변수의 계수는 얼마이며, 해당 계수를 사용해서 TEMP 변수가 백혈병 치료에 대한 영향을 설명하시오.
* TEMP의 계수 : -100.1734
* TEMP가 1 단위 증가할 때, 백혈병 세포가 관측되지 않을 오즈가 e^(-100.1734) 배 감소한다는 것을 의미 = 체온이 높아질수록 백혈병 치료 결과가 나빠질 가능성이 크다


##문제 7. CELL 변수의 99% 오즈비에 대한 신뢰구간을 구하시오.
```{python}
# CELL 변수의 계수와 표준 오차 추출
cell_coef = 64.2581
cell_stderr = 74.965

# 99% 신뢰구간을 위한 Z 값
z_value = norm.ppf(1 - 0.01 / 2)

# 오즈비 신뢰구간 계산
lower_bound = np.exp(cell_coef - z_value * cell_stderr)
upper_bound = np.exp(cell_coef + z_value * cell_stderr)

print(lower_bound, upper_bound)
```


## 문제 8. 주어진 데이터에 대하여 로지스틱 회귀 모델의 예측 확률을 구한 후, 50% 이상인 경우 1로 처리하여, 혼동 행렬를 구하시오.
```{python}
# 예측 확률 계산
y_pred_prob = result.predict(X)

# 예측 확률을 기준으로 50% 이상은 1, 이하는 0으로 변환
y_pred = (y_pred_prob >= 0.5).astype(int)

# 혼동 행렬 계산
conf_matrix = confusion_matrix(y, y_pred) # y:실제, y_pred: 예측
conf_matrix
```


##문제 9. 해당 모델의 Accuracy는 얼마인가요?
```{python}
# 방법1
(15+5)/(15+3+4+5)

# 방밥2. 코드
from sklearn.metrics import accuracy_score
accuracy = accuracy_score(y, y_pred)
accuracy
```


##문제 10. 해당 모델의 F1 Score를 구하세요.
```{python}
from sklearn.metrics import f1_score
f1 = f1_score(y, y_pred)
f1
```
